# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'prometheus.node_exporter'
    static_configs:
      - targets: ['prometheus.rpi.topbass.studio:9100']

  - job_name: 'grafana.node_exporter'
    static_configs:
      - targets: ['grafana.rpi.topbass.studio:9100']

  - job_name: 'healthstats.node_exporter'
    static_configs:
      - targets: ['healthstats.rpi.topbass.studio:9100']

  - job_name: 'sensehat.node_exporter'
    static_configs:
      - targets: ['sensehat.rpi.topbass.studio:9100']

  # - job_name: 'dogwatchdog.node_exporter'
  #   static_configs:
  #     - targets: ['dogwatchdog.rpi.topbass.studio:9100']

  - job_name: 'reckon.node_exporter'
    static_configs:
      - targets: ['reckon.rpi.topbass.studio:9100']

  - job_name: 'otto.node_exporter'
    static_configs:
      - targets: ['otto.rpi.topbass.studio:9100']

  - job_name: 'sensehat_exporter'
    metrics_path: /
    static_configs:
      - targets: ['sensehat.rpi.topbass.studio:8000']

  - job_name: 'healthstats.pushgateway'
    static_configs:
      - targets: ['healthstats.rpi.topbass.studio:9091']
